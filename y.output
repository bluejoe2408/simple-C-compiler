Terminals which are not used

   CONSTANT
   STRING_LITERAL
   SIZEOF
   PTR_OP
   TYPE_NAME
   '?'


Grammar

    0 $accept: Program $end

    1 Program: translation_unit

    2 primary_expression: IDENTIFIER
    3                   | TRUE
    4                   | FALSE
    5                   | CONSTANT_INT
    6                   | CONSTANT_DOUBLE
    7                   | '(' expression ')'

    8 postfix_expression: primary_expression
    9                   | postfix_expression '[' expression ']'
   10                   | postfix_expression '(' ')'
   11                   | postfix_expression '(' argument_expression_list ')'
   12                   | postfix_expression INC_OP
   13                   | postfix_expression DEC_OP

   14 argument_expression_list: assignment_expression
   15                         | argument_expression_list ',' assignment_expression

   16 unary_expression: postfix_expression
   17                 | INC_OP unary_expression
   18                 | DEC_OP unary_expression
   19                 | unary_operator unary_expression

   20 unary_operator: '+'
   21               | '-'
   22               | '~'
   23               | '!'

   24 multiplicative_expression: unary_expression
   25                          | multiplicative_expression '*' unary_expression
   26                          | multiplicative_expression '/' unary_expression
   27                          | multiplicative_expression '%' unary_expression

   28 additive_expression: multiplicative_expression
   29                    | additive_expression '+' multiplicative_expression
   30                    | additive_expression '-' multiplicative_expression

   31 shift_expression: additive_expression
   32                 | shift_expression LEFT_OP additive_expression
   33                 | shift_expression RIGHT_OP additive_expression

   34 relational_expression: shift_expression
   35                      | relational_expression '<' shift_expression
   36                      | relational_expression '>' shift_expression
   37                      | relational_expression LE_OP shift_expression
   38                      | relational_expression GE_OP shift_expression

   39 equality_expression: relational_expression
   40                    | equality_expression EQ_OP relational_expression
   41                    | equality_expression NE_OP relational_expression

   42 and_expression: equality_expression
   43               | and_expression '&' equality_expression

   44 exclusive_or_expression: and_expression
   45                        | exclusive_or_expression '^' and_expression

   46 inclusive_or_expression: exclusive_or_expression
   47                        | inclusive_or_expression '|' exclusive_or_expression

   48 logical_and_expression: inclusive_or_expression
   49                       | logical_and_expression AND_OP inclusive_or_expression

   50 logical_or_expression: logical_and_expression
   51                      | logical_or_expression OR_OP logical_and_expression

   52 assignment_expression: logical_or_expression
   53                      | unary_expression assignment_operator assignment_expression

   54 assignment_operator: '='
   55                    | MUL_ASSIGN
   56                    | DIV_ASSIGN
   57                    | MOD_ASSIGN
   58                    | ADD_ASSIGN
   59                    | SUB_ASSIGN
   60                    | LEFT_ASSIGN
   61                    | RIGHT_ASSIGN
   62                    | AND_ASSIGN
   63                    | XOR_ASSIGN
   64                    | OR_ASSIGN

   65 expression: assignment_expression
   66           | expression ',' assignment_expression

   67 declaration: type_specifier init_declarator_list ';'

   68 init_declarator_list: init_declarator
   69                     | init_declarator_list ',' init_declarator

   70 init_declarator: declarator
   71                | declarator '=' initializer

   72 type_specifier: VOID
   73               | CHAR
   74               | INT
   75               | DOUBLE
   76               | BOOL

   77 declarator: IDENTIFIER
   78           | '(' declarator ')'
   79           | declarator '[' assignment_expression ']'
   80           | declarator '[' '*' ']'
   81           | declarator '[' ']'
   82           | declarator '(' parameter_list ')'
   83           | declarator '(' identifier_list ')'
   84           | declarator '(' ')'

   85 parameter_list: parameter_declaration
   86               | parameter_list ',' parameter_declaration

   87 parameter_declaration: type_specifier declarator
   88                      | type_specifier abstract_declarator
   89                      | type_specifier

   90 identifier_list: IDENTIFIER
   91                | identifier_list ',' IDENTIFIER

   92 abstract_declarator: '(' abstract_declarator ')'
   93                    | '[' ']'
   94                    | '[' assignment_expression ']'
   95                    | abstract_declarator '[' ']'
   96                    | abstract_declarator '[' assignment_expression ']'
   97                    | '[' '*' ']'
   98                    | abstract_declarator '[' '*' ']'
   99                    | '(' ')'
  100                    | '(' parameter_list ')'
  101                    | abstract_declarator '(' ')'
  102                    | abstract_declarator '(' parameter_list ')'

  103 initializer: assignment_expression
  104            | '{' initializer_list '}'
  105            | '{' initializer_list ',' '}'

  106 initializer_list: initializer
  107                 | designation initializer
  108                 | initializer_list ',' initializer
  109                 | initializer_list ',' designation initializer

  110 designation: designator_list '='

  111 designator_list: designator
  112                | designator_list designator

  113 designator: '[' logical_or_expression ']'
  114           | '.' IDENTIFIER

  115 statement: labeled_statement
  116          | compound_statement
  117          | expression_statement
  118          | selection_statement
  119          | iteration_statement
  120          | jump_statement

  121 labeled_statement: IDENTIFIER ':' statement
  122                  | CASE logical_or_expression ':' statement

  123 compound_statement: '{' '}'
  124                   | '{' block_item_list '}'

  125 block_item_list: block_item
  126                | block_item_list block_item

  127 block_item: declaration
  128           | statement

  129 expression_statement: ';'
  130                     | expression ';'

  131 selection_statement: IF '(' expression ')' statement
  132                    | IF '(' expression ')' statement ELSE statement
  133                    | SWITCH '(' expression ')' statement

  134 iteration_statement: WHILE '(' expression ')' statement
  135                    | DO statement WHILE '(' expression ')' ';'
  136                    | FOR '(' expression_statement expression_statement ')' statement
  137                    | FOR '(' expression_statement expression_statement expression ')' statement
  138                    | FOR '(' declaration expression_statement ')' statement
  139                    | FOR '(' declaration expression_statement expression ')' statement

  140 jump_statement: GOTO IDENTIFIER ';'
  141               | CONTINUE ';'
  142               | BREAK ';'
  143               | RETURN ';'
  144               | RETURN expression ';'

  145 translation_unit: external_declaration
  146                 | translation_unit external_declaration

  147 external_declaration: function_definition
  148                     | declaration

  149 function_definition: type_specifier declarator declaration_list compound_statement
  150                    | type_specifier declarator compound_statement

  151 declaration_list: declaration
  152                 | declaration_list declaration


Terminals, with rules where they appear

$end (0) 0
'!' (33) 23
'%' (37) 27
'&' (38) 43
'(' (40) 7 10 11 78 82 83 84 92 99 100 101 102 131 132 133 134 135
    136 137 138 139
')' (41) 7 10 11 78 82 83 84 92 99 100 101 102 131 132 133 134 135
    136 137 138 139
'*' (42) 25 80 97 98
'+' (43) 20 29
',' (44) 15 66 69 86 91 105 108 109
'-' (45) 21 30
'.' (46) 114
'/' (47) 26
':' (58) 121 122
';' (59) 67 129 130 135 140 141 142 143 144
'<' (60) 35
'=' (61) 54 71 110
'>' (62) 36
'?' (63)
'[' (91) 9 79 80 81 93 94 95 96 97 98 113
']' (93) 9 79 80 81 93 94 95 96 97 98 113
'^' (94) 45
'{' (123) 104 105 123 124
'|' (124) 47
'}' (125) 104 105 123 124
'~' (126) 22
error (256)
IDENTIFIER (258) 2 77 90 91 114 121 140
CONSTANT (259)
STRING_LITERAL (260)
SIZEOF (261)
CONSTANT_INT (262) 5
CONSTANT_DOUBLE (263) 6
PTR_OP (264)
INC_OP (265) 12 17
DEC_OP (266) 13 18
LEFT_OP (267) 32
RIGHT_OP (268) 33
LE_OP (269) 37
GE_OP (270) 38
EQ_OP (271) 40
NE_OP (272) 41
AND_OP (273) 49
OR_OP (274) 51
MUL_ASSIGN (275) 55
DIV_ASSIGN (276) 56
MOD_ASSIGN (277) 57
ADD_ASSIGN (278) 58
SUB_ASSIGN (279) 59
LEFT_ASSIGN (280) 60
RIGHT_ASSIGN (281) 61
AND_ASSIGN (282) 62
XOR_ASSIGN (283) 63
OR_ASSIGN (284) 64
TYPE_NAME (285)
CHAR (286) 73
INT (287) 74
DOUBLE (288) 75
VOID (289) 72
BOOL (290) 76
CASE (291) 122
IF (292) 131 132
ELSE (293) 132
SWITCH (294) 133
WHILE (295) 134 135
DO (296) 135
FOR (297) 136 137 138 139
GOTO (298) 140
CONTINUE (299) 141
BREAK (300) 142
RETURN (301) 143 144
TRUE (302) 3
FALSE (303) 4
LOWER_THAN_ELSE (304)


Nonterminals, with rules where they appear

$accept (74)
    on left: 0
Program (75)
    on left: 1, on right: 0
primary_expression (76)
    on left: 2 3 4 5 6 7, on right: 8
postfix_expression (77)
    on left: 8 9 10 11 12 13, on right: 9 10 11 12 13 16
argument_expression_list (78)
    on left: 14 15, on right: 11 15
unary_expression (79)
    on left: 16 17 18 19, on right: 17 18 19 24 25 26 27 53
unary_operator (80)
    on left: 20 21 22 23, on right: 19
multiplicative_expression (81)
    on left: 24 25 26 27, on right: 25 26 27 28 29 30
additive_expression (82)
    on left: 28 29 30, on right: 29 30 31 32 33
shift_expression (83)
    on left: 31 32 33, on right: 32 33 34 35 36 37 38
relational_expression (84)
    on left: 34 35 36 37 38, on right: 35 36 37 38 39 40 41
equality_expression (85)
    on left: 39 40 41, on right: 40 41 42 43
and_expression (86)
    on left: 42 43, on right: 43 44 45
exclusive_or_expression (87)
    on left: 44 45, on right: 45 46 47
inclusive_or_expression (88)
    on left: 46 47, on right: 47 48 49
logical_and_expression (89)
    on left: 48 49, on right: 49 50 51
logical_or_expression (90)
    on left: 50 51, on right: 51 52 113 122
assignment_expression (91)
    on left: 52 53, on right: 14 15 53 65 66 79 94 96 103
assignment_operator (92)
    on left: 54 55 56 57 58 59 60 61 62 63 64, on right: 53
expression (93)
    on left: 65 66, on right: 7 9 66 130 131 132 133 134 135 137 139
    144
declaration (94)
    on left: 67, on right: 127 138 139 148 151 152
init_declarator_list (95)
    on left: 68 69, on right: 67 69
init_declarator (96)
    on left: 70 71, on right: 68 69
type_specifier (97)
    on left: 72 73 74 75 76, on right: 67 87 88 89 149 150
declarator (98)
    on left: 77 78 79 80 81 82 83 84, on right: 70 71 78 79 80 81 82
    83 84 87 149 150
parameter_list (99)
    on left: 85 86, on right: 82 86 100 102
parameter_declaration (100)
    on left: 87 88 89, on right: 85 86
identifier_list (101)
    on left: 90 91, on right: 83 91
abstract_declarator (102)
    on left: 92 93 94 95 96 97 98 99 100 101 102, on right: 88 92 95
    96 98 101 102
initializer (103)
    on left: 103 104 105, on right: 71 106 107 108 109
initializer_list (104)
    on left: 106 107 108 109, on right: 104 105 108 109
designation (105)
    on left: 110, on right: 107 109
designator_list (106)
    on left: 111 112, on right: 110 112
designator (107)
    on left: 113 114, on right: 111 112
statement (108)
    on left: 115 116 117 118 119 120, on right: 121 122 128 131 132
    133 134 135 136 137 138 139
labeled_statement (109)
    on left: 121 122, on right: 115
compound_statement (110)
    on left: 123 124, on right: 116 149 150
block_item_list (111)
    on left: 125 126, on right: 124 126
block_item (112)
    on left: 127 128, on right: 125 126
expression_statement (113)
    on left: 129 130, on right: 117 136 137 138 139
selection_statement (114)
    on left: 131 132 133, on right: 118
iteration_statement (115)
    on left: 134 135 136 137 138 139, on right: 119
jump_statement (116)
    on left: 140 141 142 143 144, on right: 120
translation_unit (117)
    on left: 145 146, on right: 1 146
external_declaration (118)
    on left: 147 148, on right: 145 146
function_definition (119)
    on left: 149 150, on right: 147
declaration_list (120)
    on left: 151 152, on right: 149 152


state 0

    0 $accept: . Program $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5

    Program               go to state 6
    declaration           go to state 7
    type_specifier        go to state 8
    translation_unit      go to state 9
    external_declaration  go to state 10
    function_definition   go to state 11


state 1

   73 type_specifier: CHAR .

    $default  reduce using rule 73 (type_specifier)


state 2

   74 type_specifier: INT .

    $default  reduce using rule 74 (type_specifier)


state 3

   75 type_specifier: DOUBLE .

    $default  reduce using rule 75 (type_specifier)


state 4

   72 type_specifier: VOID .

    $default  reduce using rule 72 (type_specifier)


state 5

   76 type_specifier: BOOL .

    $default  reduce using rule 76 (type_specifier)


state 6

    0 $accept: Program . $end

    $end  shift, and go to state 12


state 7

  148 external_declaration: declaration .

    $default  reduce using rule 148 (external_declaration)


state 8

   67 declaration: type_specifier . init_declarator_list ';'
  149 function_definition: type_specifier . declarator declaration_list compound_statement
  150                    | type_specifier . declarator compound_statement

    IDENTIFIER  shift, and go to state 13
    '('         shift, and go to state 14

    init_declarator_list  go to state 15
    init_declarator       go to state 16
    declarator            go to state 17


state 9

    1 Program: translation_unit .
  146 translation_unit: translation_unit . external_declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5

    $default  reduce using rule 1 (Program)

    declaration           go to state 7
    type_specifier        go to state 8
    external_declaration  go to state 18
    function_definition   go to state 11


state 10

  145 translation_unit: external_declaration .

    $default  reduce using rule 145 (translation_unit)


state 11

  147 external_declaration: function_definition .

    $default  reduce using rule 147 (external_declaration)


state 12

    0 $accept: Program $end .

    $default  accept


state 13

   77 declarator: IDENTIFIER .

    $default  reduce using rule 77 (declarator)


state 14

   78 declarator: '(' . declarator ')'

    IDENTIFIER  shift, and go to state 13
    '('         shift, and go to state 14

    declarator  go to state 19


state 15

   67 declaration: type_specifier init_declarator_list . ';'
   69 init_declarator_list: init_declarator_list . ',' init_declarator

    ';'  shift, and go to state 20
    ','  shift, and go to state 21


state 16

   68 init_declarator_list: init_declarator .

    $default  reduce using rule 68 (init_declarator_list)


state 17

   70 init_declarator: declarator .
   71                | declarator . '=' initializer
   79 declarator: declarator . '[' assignment_expression ']'
   80           | declarator . '[' '*' ']'
   81           | declarator . '[' ']'
   82           | declarator . '(' parameter_list ')'
   83           | declarator . '(' identifier_list ')'
   84           | declarator . '(' ')'
  149 function_definition: type_specifier declarator . declaration_list compound_statement
  150                    | type_specifier declarator . compound_statement

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5
    '='     shift, and go to state 22
    '['     shift, and go to state 23
    '{'     shift, and go to state 24
    '('     shift, and go to state 25

    $default  reduce using rule 70 (init_declarator)

    declaration         go to state 26
    type_specifier      go to state 27
    compound_statement  go to state 28
    declaration_list    go to state 29


state 18

  146 translation_unit: translation_unit external_declaration .

    $default  reduce using rule 146 (translation_unit)


state 19

   78 declarator: '(' declarator . ')'
   79           | declarator . '[' assignment_expression ']'
   80           | declarator . '[' '*' ']'
   81           | declarator . '[' ']'
   82           | declarator . '(' parameter_list ')'
   83           | declarator . '(' identifier_list ')'
   84           | declarator . '(' ')'

    '['  shift, and go to state 23
    '('  shift, and go to state 25
    ')'  shift, and go to state 30


state 20

   67 declaration: type_specifier init_declarator_list ';' .

    $default  reduce using rule 67 (declaration)


state 21

   69 init_declarator_list: init_declarator_list ',' . init_declarator

    IDENTIFIER  shift, and go to state 13
    '('         shift, and go to state 14

    init_declarator  go to state 31
    declarator       go to state 32


state 22

   71 init_declarator: declarator '=' . initializer

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 44
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    initializer                go to state 61


state 23

   79 declarator: declarator '[' . assignment_expression ']'
   80           | declarator '[' . '*' ']'
   81           | declarator '[' . ']'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ']'              shift, and go to state 62
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '*'              shift, and go to state 63
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 64


state 24

  123 compound_statement: '{' . '}'
  124                   | '{' . block_item_list '}'

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CHAR             shift, and go to state 1
    INT              shift, and go to state 2
    DOUBLE           shift, and go to state 3
    VOID             shift, and go to state 4
    BOOL             shift, and go to state 5
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '}'              shift, and go to state 77
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    declaration                go to state 80
    type_specifier             go to state 27
    statement                  go to state 81
    labeled_statement          go to state 82
    compound_statement         go to state 83
    block_item_list            go to state 84
    block_item                 go to state 85
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 25

   82 declarator: declarator '(' . parameter_list ')'
   83           | declarator '(' . identifier_list ')'
   84           | declarator '(' . ')'

    IDENTIFIER  shift, and go to state 90
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    VOID        shift, and go to state 4
    BOOL        shift, and go to state 5
    ')'         shift, and go to state 91

    type_specifier         go to state 92
    parameter_list         go to state 93
    parameter_declaration  go to state 94
    identifier_list        go to state 95


state 26

  151 declaration_list: declaration .

    $default  reduce using rule 151 (declaration_list)


state 27

   67 declaration: type_specifier . init_declarator_list ';'

    IDENTIFIER  shift, and go to state 13
    '('         shift, and go to state 14

    init_declarator_list  go to state 15
    init_declarator       go to state 16
    declarator            go to state 32


state 28

  150 function_definition: type_specifier declarator compound_statement .

    $default  reduce using rule 150 (function_definition)


state 29

  149 function_definition: type_specifier declarator declaration_list . compound_statement
  152 declaration_list: declaration_list . declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5
    '{'     shift, and go to state 24

    declaration         go to state 96
    type_specifier      go to state 27
    compound_statement  go to state 97


state 30

   78 declarator: '(' declarator ')' .

    $default  reduce using rule 78 (declarator)


state 31

   69 init_declarator_list: init_declarator_list ',' init_declarator .

    $default  reduce using rule 69 (init_declarator_list)


state 32

   70 init_declarator: declarator .
   71                | declarator . '=' initializer
   79 declarator: declarator . '[' assignment_expression ']'
   80           | declarator . '[' '*' ']'
   81           | declarator . '[' ']'
   82           | declarator . '(' parameter_list ')'
   83           | declarator . '(' identifier_list ')'
   84           | declarator . '(' ')'

    '='  shift, and go to state 22
    '['  shift, and go to state 23
    '('  shift, and go to state 25

    $default  reduce using rule 70 (init_declarator)


state 33

    2 primary_expression: IDENTIFIER .

    $default  reduce using rule 2 (primary_expression)


state 34

    5 primary_expression: CONSTANT_INT .

    $default  reduce using rule 5 (primary_expression)


state 35

    6 primary_expression: CONSTANT_DOUBLE .

    $default  reduce using rule 6 (primary_expression)


state 36

   17 unary_expression: INC_OP . unary_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 98
    unary_operator      go to state 49


state 37

   18 unary_expression: DEC_OP . unary_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 99
    unary_operator      go to state 49


state 38

    3 primary_expression: TRUE .

    $default  reduce using rule 3 (primary_expression)


state 39

    4 primary_expression: FALSE .

    $default  reduce using rule 4 (primary_expression)


state 40

   23 unary_operator: '!' .

    $default  reduce using rule 23 (unary_operator)


state 41

   22 unary_operator: '~' .

    $default  reduce using rule 22 (unary_operator)


state 42

   21 unary_operator: '-' .

    $default  reduce using rule 21 (unary_operator)


state 43

   20 unary_operator: '+' .

    $default  reduce using rule 20 (unary_operator)


state 44

  104 initializer: '{' . initializer_list '}'
  105            | '{' . initializer_list ',' '}'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '['              shift, and go to state 100
    '.'              shift, and go to state 101
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 44
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    initializer                go to state 102
    initializer_list           go to state 103
    designation                go to state 104
    designator_list            go to state 105
    designator                 go to state 106


state 45

    7 primary_expression: '(' . expression ')'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 107


state 46

    8 postfix_expression: primary_expression .

    $default  reduce using rule 8 (postfix_expression)


state 47

    9 postfix_expression: postfix_expression . '[' expression ']'
   10                   | postfix_expression . '(' ')'
   11                   | postfix_expression . '(' argument_expression_list ')'
   12                   | postfix_expression . INC_OP
   13                   | postfix_expression . DEC_OP
   16 unary_expression: postfix_expression .

    INC_OP  shift, and go to state 108
    DEC_OP  shift, and go to state 109
    '['     shift, and go to state 110
    '('     shift, and go to state 111

    $default  reduce using rule 16 (unary_expression)


state 48

   24 multiplicative_expression: unary_expression .
   53 assignment_expression: unary_expression . assignment_operator assignment_expression

    MUL_ASSIGN    shift, and go to state 112
    DIV_ASSIGN    shift, and go to state 113
    MOD_ASSIGN    shift, and go to state 114
    ADD_ASSIGN    shift, and go to state 115
    SUB_ASSIGN    shift, and go to state 116
    LEFT_ASSIGN   shift, and go to state 117
    RIGHT_ASSIGN  shift, and go to state 118
    AND_ASSIGN    shift, and go to state 119
    XOR_ASSIGN    shift, and go to state 120
    OR_ASSIGN     shift, and go to state 121
    '='           shift, and go to state 122

    $default  reduce using rule 24 (multiplicative_expression)

    assignment_operator  go to state 123


state 49

   19 unary_expression: unary_operator . unary_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 124
    unary_operator      go to state 49


state 50

   25 multiplicative_expression: multiplicative_expression . '*' unary_expression
   26                          | multiplicative_expression . '/' unary_expression
   27                          | multiplicative_expression . '%' unary_expression
   28 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 125
    '/'  shift, and go to state 126
    '%'  shift, and go to state 127

    $default  reduce using rule 28 (additive_expression)


state 51

   29 additive_expression: additive_expression . '+' multiplicative_expression
   30                    | additive_expression . '-' multiplicative_expression
   31 shift_expression: additive_expression .

    '-'  shift, and go to state 128
    '+'  shift, and go to state 129

    $default  reduce using rule 31 (shift_expression)


state 52

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   34 relational_expression: shift_expression .

    LEFT_OP   shift, and go to state 130
    RIGHT_OP  shift, and go to state 131

    $default  reduce using rule 34 (relational_expression)


state 53

   35 relational_expression: relational_expression . '<' shift_expression
   36                      | relational_expression . '>' shift_expression
   37                      | relational_expression . LE_OP shift_expression
   38                      | relational_expression . GE_OP shift_expression
   39 equality_expression: relational_expression .

    LE_OP  shift, and go to state 132
    GE_OP  shift, and go to state 133
    '<'    shift, and go to state 134
    '>'    shift, and go to state 135

    $default  reduce using rule 39 (equality_expression)


state 54

   40 equality_expression: equality_expression . EQ_OP relational_expression
   41                    | equality_expression . NE_OP relational_expression
   42 and_expression: equality_expression .

    EQ_OP  shift, and go to state 136
    NE_OP  shift, and go to state 137

    $default  reduce using rule 42 (and_expression)


state 55

   43 and_expression: and_expression . '&' equality_expression
   44 exclusive_or_expression: and_expression .

    '&'  shift, and go to state 138

    $default  reduce using rule 44 (exclusive_or_expression)


state 56

   45 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   46 inclusive_or_expression: exclusive_or_expression .

    '^'  shift, and go to state 139

    $default  reduce using rule 46 (inclusive_or_expression)


state 57

   47 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   48 logical_and_expression: inclusive_or_expression .

    '|'  shift, and go to state 140

    $default  reduce using rule 48 (logical_and_expression)


state 58

   49 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   50 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 141

    $default  reduce using rule 50 (logical_or_expression)


state 59

   51 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   52 assignment_expression: logical_or_expression .

    OR_OP  shift, and go to state 142

    $default  reduce using rule 52 (assignment_expression)


state 60

  103 initializer: assignment_expression .

    $default  reduce using rule 103 (initializer)


state 61

   71 init_declarator: declarator '=' initializer .

    $default  reduce using rule 71 (init_declarator)


state 62

   81 declarator: declarator '[' ']' .

    $default  reduce using rule 81 (declarator)


state 63

   80 declarator: declarator '[' '*' . ']'

    ']'  shift, and go to state 143


state 64

   79 declarator: declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 144


state 65

    2 primary_expression: IDENTIFIER .
  121 labeled_statement: IDENTIFIER . ':' statement

    ':'  shift, and go to state 145

    $default  reduce using rule 2 (primary_expression)


state 66

  122 labeled_statement: CASE . logical_or_expression ':' statement

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 147


state 67

  131 selection_statement: IF . '(' expression ')' statement
  132                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 148


state 68

  133 selection_statement: SWITCH . '(' expression ')' statement

    '('  shift, and go to state 149


state 69

  134 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 150


state 70

  135 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 151
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 71

  136 iteration_statement: FOR . '(' expression_statement expression_statement ')' statement
  137                    | FOR . '(' expression_statement expression_statement expression ')' statement
  138                    | FOR . '(' declaration expression_statement ')' statement
  139                    | FOR . '(' declaration expression_statement expression ')' statement

    '('  shift, and go to state 152


state 72

  140 jump_statement: GOTO . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 153


state 73

  141 jump_statement: CONTINUE . ';'

    ';'  shift, and go to state 154


state 74

  142 jump_statement: BREAK . ';'

    ';'  shift, and go to state 155


state 75

  143 jump_statement: RETURN . ';'
  144               | RETURN . expression ';'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 156
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 157


state 76

  129 expression_statement: ';' .

    $default  reduce using rule 129 (expression_statement)


state 77

  123 compound_statement: '{' '}' .

    $default  reduce using rule 123 (compound_statement)


state 78

   65 expression: assignment_expression .

    $default  reduce using rule 65 (expression)


state 79

   66 expression: expression . ',' assignment_expression
  130 expression_statement: expression . ';'

    ';'  shift, and go to state 158
    ','  shift, and go to state 159


state 80

  127 block_item: declaration .

    $default  reduce using rule 127 (block_item)


state 81

  128 block_item: statement .

    $default  reduce using rule 128 (block_item)


state 82

  115 statement: labeled_statement .

    $default  reduce using rule 115 (statement)


state 83

  116 statement: compound_statement .

    $default  reduce using rule 116 (statement)


state 84

  124 compound_statement: '{' block_item_list . '}'
  126 block_item_list: block_item_list . block_item

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CHAR             shift, and go to state 1
    INT              shift, and go to state 2
    DOUBLE           shift, and go to state 3
    VOID             shift, and go to state 4
    BOOL             shift, and go to state 5
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '}'              shift, and go to state 160
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    declaration                go to state 80
    type_specifier             go to state 27
    statement                  go to state 81
    labeled_statement          go to state 82
    compound_statement         go to state 83
    block_item                 go to state 161
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 85

  125 block_item_list: block_item .

    $default  reduce using rule 125 (block_item_list)


state 86

  117 statement: expression_statement .

    $default  reduce using rule 117 (statement)


state 87

  118 statement: selection_statement .

    $default  reduce using rule 118 (statement)


state 88

  119 statement: iteration_statement .

    $default  reduce using rule 119 (statement)


state 89

  120 statement: jump_statement .

    $default  reduce using rule 120 (statement)


state 90

   90 identifier_list: IDENTIFIER .

    $default  reduce using rule 90 (identifier_list)


state 91

   84 declarator: declarator '(' ')' .

    $default  reduce using rule 84 (declarator)


state 92

   87 parameter_declaration: type_specifier . declarator
   88                      | type_specifier . abstract_declarator
   89                      | type_specifier .

    IDENTIFIER  shift, and go to state 13
    '['         shift, and go to state 162
    '('         shift, and go to state 163

    $default  reduce using rule 89 (parameter_declaration)

    declarator           go to state 164
    abstract_declarator  go to state 165


state 93

   82 declarator: declarator '(' parameter_list . ')'
   86 parameter_list: parameter_list . ',' parameter_declaration

    ','  shift, and go to state 166
    ')'  shift, and go to state 167


state 94

   85 parameter_list: parameter_declaration .

    $default  reduce using rule 85 (parameter_list)


state 95

   83 declarator: declarator '(' identifier_list . ')'
   91 identifier_list: identifier_list . ',' IDENTIFIER

    ','  shift, and go to state 168
    ')'  shift, and go to state 169


state 96

  152 declaration_list: declaration_list declaration .

    $default  reduce using rule 152 (declaration_list)


state 97

  149 function_definition: type_specifier declarator declaration_list compound_statement .

    $default  reduce using rule 149 (function_definition)


state 98

   17 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 17 (unary_expression)


state 99

   18 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 18 (unary_expression)


state 100

  113 designator: '[' . logical_or_expression ']'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 170


state 101

  114 designator: '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 171


state 102

  106 initializer_list: initializer .

    $default  reduce using rule 106 (initializer_list)


state 103

  104 initializer: '{' initializer_list . '}'
  105            | '{' initializer_list . ',' '}'
  108 initializer_list: initializer_list . ',' initializer
  109                 | initializer_list . ',' designation initializer

    ','  shift, and go to state 172
    '}'  shift, and go to state 173


state 104

  107 initializer_list: designation . initializer

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 44
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    initializer                go to state 174


state 105

  110 designation: designator_list . '='
  112 designator_list: designator_list . designator

    '='  shift, and go to state 175
    '['  shift, and go to state 100
    '.'  shift, and go to state 101

    designator  go to state 176


state 106

  111 designator_list: designator .

    $default  reduce using rule 111 (designator_list)


state 107

    7 primary_expression: '(' expression . ')'
   66 expression: expression . ',' assignment_expression

    ','  shift, and go to state 159
    ')'  shift, and go to state 177


state 108

   12 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 12 (postfix_expression)


state 109

   13 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 13 (postfix_expression)


state 110

    9 postfix_expression: postfix_expression '[' . expression ']'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 178


state 111

   10 postfix_expression: postfix_expression '(' . ')'
   11                   | postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45
    ')'              shift, and go to state 179

    primary_expression         go to state 46
    postfix_expression         go to state 47
    argument_expression_list   go to state 180
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 181


state 112

   55 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 55 (assignment_operator)


state 113

   56 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 56 (assignment_operator)


state 114

   57 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 57 (assignment_operator)


state 115

   58 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 58 (assignment_operator)


state 116

   59 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 59 (assignment_operator)


state 117

   60 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 60 (assignment_operator)


state 118

   61 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 61 (assignment_operator)


state 119

   62 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 62 (assignment_operator)


state 120

   63 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 63 (assignment_operator)


state 121

   64 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 64 (assignment_operator)


state 122

   54 assignment_operator: '=' .

    $default  reduce using rule 54 (assignment_operator)


state 123

   53 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 182


state 124

   19 unary_expression: unary_operator unary_expression .

    $default  reduce using rule 19 (unary_expression)


state 125

   25 multiplicative_expression: multiplicative_expression '*' . unary_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 183
    unary_operator      go to state 49


state 126

   26 multiplicative_expression: multiplicative_expression '/' . unary_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 184
    unary_operator      go to state 49


state 127

   27 multiplicative_expression: multiplicative_expression '%' . unary_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression  go to state 46
    postfix_expression  go to state 47
    unary_expression    go to state 185
    unary_operator      go to state 49


state 128

   30 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 186


state 129

   29 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 187


state 130

   32 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 188


state 131

   33 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 189


state 132

   37 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 190


state 133

   38 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 191


state 134

   35 relational_expression: relational_expression '<' . shift_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 192


state 135

   36 relational_expression: relational_expression '>' . shift_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 193


state 136

   40 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 194


state 137

   41 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 195


state 138

   43 and_expression: and_expression '&' . equality_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 196


state 139

   45 exclusive_or_expression: exclusive_or_expression '^' . and_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 197


state 140

   47 inclusive_or_expression: inclusive_or_expression '|' . exclusive_or_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 198


state 141

   49 logical_and_expression: logical_and_expression AND_OP . inclusive_or_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 199


state 142

   51 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 146
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 200


state 143

   80 declarator: declarator '[' '*' ']' .

    $default  reduce using rule 80 (declarator)


state 144

   79 declarator: declarator '[' assignment_expression ']' .

    $default  reduce using rule 79 (declarator)


state 145

  121 labeled_statement: IDENTIFIER ':' . statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 201
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 146

   24 multiplicative_expression: unary_expression .

    $default  reduce using rule 24 (multiplicative_expression)


state 147

   51 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
  122 labeled_statement: CASE logical_or_expression . ':' statement

    OR_OP  shift, and go to state 142
    ':'    shift, and go to state 202


state 148

  131 selection_statement: IF '(' . expression ')' statement
  132                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 203


state 149

  133 selection_statement: SWITCH '(' . expression ')' statement

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 204


state 150

  134 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 205


state 151

  135 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 206


state 152

  136 iteration_statement: FOR '(' . expression_statement expression_statement ')' statement
  137                    | FOR '(' . expression_statement expression_statement expression ')' statement
  138                    | FOR '(' . declaration expression_statement ')' statement
  139                    | FOR '(' . declaration expression_statement expression ')' statement

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CHAR             shift, and go to state 1
    INT              shift, and go to state 2
    DOUBLE           shift, and go to state 3
    VOID             shift, and go to state 4
    BOOL             shift, and go to state 5
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    declaration                go to state 207
    type_specifier             go to state 27
    expression_statement       go to state 208


state 153

  140 jump_statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 209


state 154

  141 jump_statement: CONTINUE ';' .

    $default  reduce using rule 141 (jump_statement)


state 155

  142 jump_statement: BREAK ';' .

    $default  reduce using rule 142 (jump_statement)


state 156

  143 jump_statement: RETURN ';' .

    $default  reduce using rule 143 (jump_statement)


state 157

   66 expression: expression . ',' assignment_expression
  144 jump_statement: RETURN expression . ';'

    ';'  shift, and go to state 210
    ','  shift, and go to state 159


state 158

  130 expression_statement: expression ';' .

    $default  reduce using rule 130 (expression_statement)


state 159

   66 expression: expression ',' . assignment_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 211


state 160

  124 compound_statement: '{' block_item_list '}' .

    $default  reduce using rule 124 (compound_statement)


state 161

  126 block_item_list: block_item_list block_item .

    $default  reduce using rule 126 (block_item_list)


state 162

   93 abstract_declarator: '[' . ']'
   94                    | '[' . assignment_expression ']'
   97                    | '[' . '*' ']'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ']'              shift, and go to state 212
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '*'              shift, and go to state 213
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 214


state 163

   78 declarator: '(' . declarator ')'
   92 abstract_declarator: '(' . abstract_declarator ')'
   99                    | '(' . ')'
  100                    | '(' . parameter_list ')'

    IDENTIFIER  shift, and go to state 13
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    DOUBLE      shift, and go to state 3
    VOID        shift, and go to state 4
    BOOL        shift, and go to state 5
    '['         shift, and go to state 162
    '('         shift, and go to state 163
    ')'         shift, and go to state 215

    type_specifier         go to state 92
    declarator             go to state 19
    parameter_list         go to state 216
    parameter_declaration  go to state 94
    abstract_declarator    go to state 217


state 164

   79 declarator: declarator . '[' assignment_expression ']'
   80           | declarator . '[' '*' ']'
   81           | declarator . '[' ']'
   82           | declarator . '(' parameter_list ')'
   83           | declarator . '(' identifier_list ')'
   84           | declarator . '(' ')'
   87 parameter_declaration: type_specifier declarator .

    '['  shift, and go to state 23
    '('  shift, and go to state 25

    $default  reduce using rule 87 (parameter_declaration)


state 165

   88 parameter_declaration: type_specifier abstract_declarator .
   95 abstract_declarator: abstract_declarator . '[' ']'
   96                    | abstract_declarator . '[' assignment_expression ']'
   98                    | abstract_declarator . '[' '*' ']'
  101                    | abstract_declarator . '(' ')'
  102                    | abstract_declarator . '(' parameter_list ')'

    '['  shift, and go to state 218
    '('  shift, and go to state 219

    $default  reduce using rule 88 (parameter_declaration)


state 166

   86 parameter_list: parameter_list ',' . parameter_declaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5

    type_specifier         go to state 92
    parameter_declaration  go to state 220


state 167

   82 declarator: declarator '(' parameter_list ')' .

    $default  reduce using rule 82 (declarator)


state 168

   91 identifier_list: identifier_list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 221


state 169

   83 declarator: declarator '(' identifier_list ')' .

    $default  reduce using rule 83 (declarator)


state 170

   51 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
  113 designator: '[' logical_or_expression . ']'

    OR_OP  shift, and go to state 142
    ']'    shift, and go to state 222


state 171

  114 designator: '.' IDENTIFIER .

    $default  reduce using rule 114 (designator)


state 172

  105 initializer: '{' initializer_list ',' . '}'
  108 initializer_list: initializer_list ',' . initializer
  109                 | initializer_list ',' . designation initializer

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '['              shift, and go to state 100
    '.'              shift, and go to state 101
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 44
    '}'              shift, and go to state 223
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    initializer                go to state 224
    designation                go to state 225
    designator_list            go to state 105
    designator                 go to state 106


state 173

  104 initializer: '{' initializer_list '}' .

    $default  reduce using rule 104 (initializer)


state 174

  107 initializer_list: designation initializer .

    $default  reduce using rule 107 (initializer_list)


state 175

  110 designation: designator_list '=' .

    $default  reduce using rule 110 (designation)


state 176

  112 designator_list: designator_list designator .

    $default  reduce using rule 112 (designator_list)


state 177

    7 primary_expression: '(' expression ')' .

    $default  reduce using rule 7 (primary_expression)


state 178

    9 postfix_expression: postfix_expression '[' expression . ']'
   66 expression: expression . ',' assignment_expression

    ','  shift, and go to state 159
    ']'  shift, and go to state 226


state 179

   10 postfix_expression: postfix_expression '(' ')' .

    $default  reduce using rule 10 (postfix_expression)


state 180

   11 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   15 argument_expression_list: argument_expression_list . ',' assignment_expression

    ','  shift, and go to state 227
    ')'  shift, and go to state 228


state 181

   14 argument_expression_list: assignment_expression .

    $default  reduce using rule 14 (argument_expression_list)


state 182

   53 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 53 (assignment_expression)


state 183

   25 multiplicative_expression: multiplicative_expression '*' unary_expression .

    $default  reduce using rule 25 (multiplicative_expression)


state 184

   26 multiplicative_expression: multiplicative_expression '/' unary_expression .

    $default  reduce using rule 26 (multiplicative_expression)


state 185

   27 multiplicative_expression: multiplicative_expression '%' unary_expression .

    $default  reduce using rule 27 (multiplicative_expression)


state 186

   25 multiplicative_expression: multiplicative_expression . '*' unary_expression
   26                          | multiplicative_expression . '/' unary_expression
   27                          | multiplicative_expression . '%' unary_expression
   30 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 125
    '/'  shift, and go to state 126
    '%'  shift, and go to state 127

    $default  reduce using rule 30 (additive_expression)


state 187

   25 multiplicative_expression: multiplicative_expression . '*' unary_expression
   26                          | multiplicative_expression . '/' unary_expression
   27                          | multiplicative_expression . '%' unary_expression
   29 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 125
    '/'  shift, and go to state 126
    '%'  shift, and go to state 127

    $default  reduce using rule 29 (additive_expression)


state 188

   29 additive_expression: additive_expression . '+' multiplicative_expression
   30                    | additive_expression . '-' multiplicative_expression
   32 shift_expression: shift_expression LEFT_OP additive_expression .

    '-'  shift, and go to state 128
    '+'  shift, and go to state 129

    $default  reduce using rule 32 (shift_expression)


state 189

   29 additive_expression: additive_expression . '+' multiplicative_expression
   30                    | additive_expression . '-' multiplicative_expression
   33 shift_expression: shift_expression RIGHT_OP additive_expression .

    '-'  shift, and go to state 128
    '+'  shift, and go to state 129

    $default  reduce using rule 33 (shift_expression)


state 190

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   37 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_OP   shift, and go to state 130
    RIGHT_OP  shift, and go to state 131

    $default  reduce using rule 37 (relational_expression)


state 191

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   38 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_OP   shift, and go to state 130
    RIGHT_OP  shift, and go to state 131

    $default  reduce using rule 38 (relational_expression)


state 192

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   35 relational_expression: relational_expression '<' shift_expression .

    LEFT_OP   shift, and go to state 130
    RIGHT_OP  shift, and go to state 131

    $default  reduce using rule 35 (relational_expression)


state 193

   32 shift_expression: shift_expression . LEFT_OP additive_expression
   33                 | shift_expression . RIGHT_OP additive_expression
   36 relational_expression: relational_expression '>' shift_expression .

    LEFT_OP   shift, and go to state 130
    RIGHT_OP  shift, and go to state 131

    $default  reduce using rule 36 (relational_expression)


state 194

   35 relational_expression: relational_expression . '<' shift_expression
   36                      | relational_expression . '>' shift_expression
   37                      | relational_expression . LE_OP shift_expression
   38                      | relational_expression . GE_OP shift_expression
   40 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 132
    GE_OP  shift, and go to state 133
    '<'    shift, and go to state 134
    '>'    shift, and go to state 135

    $default  reduce using rule 40 (equality_expression)


state 195

   35 relational_expression: relational_expression . '<' shift_expression
   36                      | relational_expression . '>' shift_expression
   37                      | relational_expression . LE_OP shift_expression
   38                      | relational_expression . GE_OP shift_expression
   41 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 132
    GE_OP  shift, and go to state 133
    '<'    shift, and go to state 134
    '>'    shift, and go to state 135

    $default  reduce using rule 41 (equality_expression)


state 196

   40 equality_expression: equality_expression . EQ_OP relational_expression
   41                    | equality_expression . NE_OP relational_expression
   43 and_expression: and_expression '&' equality_expression .

    EQ_OP  shift, and go to state 136
    NE_OP  shift, and go to state 137

    $default  reduce using rule 43 (and_expression)


state 197

   43 and_expression: and_expression . '&' equality_expression
   45 exclusive_or_expression: exclusive_or_expression '^' and_expression .

    '&'  shift, and go to state 138

    $default  reduce using rule 45 (exclusive_or_expression)


state 198

   45 exclusive_or_expression: exclusive_or_expression . '^' and_expression
   47 inclusive_or_expression: inclusive_or_expression '|' exclusive_or_expression .

    '^'  shift, and go to state 139

    $default  reduce using rule 47 (inclusive_or_expression)


state 199

   47 inclusive_or_expression: inclusive_or_expression . '|' exclusive_or_expression
   49 logical_and_expression: logical_and_expression AND_OP inclusive_or_expression .

    '|'  shift, and go to state 140

    $default  reduce using rule 49 (logical_and_expression)


state 200

   49 logical_and_expression: logical_and_expression . AND_OP inclusive_or_expression
   51 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 141

    $default  reduce using rule 51 (logical_or_expression)


state 201

  121 labeled_statement: IDENTIFIER ':' statement .

    $default  reduce using rule 121 (labeled_statement)


state 202

  122 labeled_statement: CASE logical_or_expression ':' . statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 229
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 203

   66 expression: expression . ',' assignment_expression
  131 selection_statement: IF '(' expression . ')' statement
  132                    | IF '(' expression . ')' statement ELSE statement

    ','  shift, and go to state 159
    ')'  shift, and go to state 230


state 204

   66 expression: expression . ',' assignment_expression
  133 selection_statement: SWITCH '(' expression . ')' statement

    ','  shift, and go to state 159
    ')'  shift, and go to state 231


state 205

   66 expression: expression . ',' assignment_expression
  134 iteration_statement: WHILE '(' expression . ')' statement

    ','  shift, and go to state 159
    ')'  shift, and go to state 232


state 206

  135 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 233


state 207

  138 iteration_statement: FOR '(' declaration . expression_statement ')' statement
  139                    | FOR '(' declaration . expression_statement expression ')' statement

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    expression_statement       go to state 234


state 208

  136 iteration_statement: FOR '(' expression_statement . expression_statement ')' statement
  137                    | FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    expression_statement       go to state 235


state 209

  140 jump_statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 140 (jump_statement)


state 210

  144 jump_statement: RETURN expression ';' .

    $default  reduce using rule 144 (jump_statement)


state 211

   66 expression: expression ',' assignment_expression .

    $default  reduce using rule 66 (expression)


state 212

   93 abstract_declarator: '[' ']' .

    $default  reduce using rule 93 (abstract_declarator)


state 213

   97 abstract_declarator: '[' '*' . ']'

    ']'  shift, and go to state 236


state 214

   94 abstract_declarator: '[' assignment_expression . ']'

    ']'  shift, and go to state 237


state 215

   99 abstract_declarator: '(' ')' .

    $default  reduce using rule 99 (abstract_declarator)


state 216

   86 parameter_list: parameter_list . ',' parameter_declaration
  100 abstract_declarator: '(' parameter_list . ')'

    ','  shift, and go to state 166
    ')'  shift, and go to state 238


state 217

   92 abstract_declarator: '(' abstract_declarator . ')'
   95                    | abstract_declarator . '[' ']'
   96                    | abstract_declarator . '[' assignment_expression ']'
   98                    | abstract_declarator . '[' '*' ']'
  101                    | abstract_declarator . '(' ')'
  102                    | abstract_declarator . '(' parameter_list ')'

    '['  shift, and go to state 218
    '('  shift, and go to state 219
    ')'  shift, and go to state 239


state 218

   95 abstract_declarator: abstract_declarator '[' . ']'
   96                    | abstract_declarator '[' . assignment_expression ']'
   98                    | abstract_declarator '[' . '*' ']'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ']'              shift, and go to state 240
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '*'              shift, and go to state 241
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 242


state 219

  101 abstract_declarator: abstract_declarator '(' . ')'
  102                    | abstract_declarator '(' . parameter_list ')'

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    DOUBLE  shift, and go to state 3
    VOID    shift, and go to state 4
    BOOL    shift, and go to state 5
    ')'     shift, and go to state 243

    type_specifier         go to state 92
    parameter_list         go to state 244
    parameter_declaration  go to state 94


state 220

   86 parameter_list: parameter_list ',' parameter_declaration .

    $default  reduce using rule 86 (parameter_list)


state 221

   91 identifier_list: identifier_list ',' IDENTIFIER .

    $default  reduce using rule 91 (identifier_list)


state 222

  113 designator: '[' logical_or_expression ']' .

    $default  reduce using rule 113 (designator)


state 223

  105 initializer: '{' initializer_list ',' '}' .

    $default  reduce using rule 105 (initializer)


state 224

  108 initializer_list: initializer_list ',' initializer .

    $default  reduce using rule 108 (initializer_list)


state 225

  109 initializer_list: initializer_list ',' designation . initializer

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 44
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 60
    initializer                go to state 245


state 226

    9 postfix_expression: postfix_expression '[' expression ']' .

    $default  reduce using rule 9 (postfix_expression)


state 227

   15 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 246


state 228

   11 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 11 (postfix_expression)


state 229

  122 labeled_statement: CASE logical_or_expression ':' statement .

    $default  reduce using rule 122 (labeled_statement)


state 230

  131 selection_statement: IF '(' expression ')' . statement
  132                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 247
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 231

  133 selection_statement: SWITCH '(' expression ')' . statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 248
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 232

  134 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 249
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 233

  135 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 250


state 234

  138 iteration_statement: FOR '(' declaration expression_statement . ')' statement
  139                    | FOR '(' declaration expression_statement . expression ')' statement

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45
    ')'              shift, and go to state 251

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 252


state 235

  136 iteration_statement: FOR '(' expression_statement expression_statement . ')' statement
  137                    | FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER       shift, and go to state 33
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '('              shift, and go to state 45
    ')'              shift, and go to state 253

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 254


state 236

   97 abstract_declarator: '[' '*' ']' .

    $default  reduce using rule 97 (abstract_declarator)


state 237

   94 abstract_declarator: '[' assignment_expression ']' .

    $default  reduce using rule 94 (abstract_declarator)


state 238

  100 abstract_declarator: '(' parameter_list ')' .

    $default  reduce using rule 100 (abstract_declarator)


state 239

   92 abstract_declarator: '(' abstract_declarator ')' .

    $default  reduce using rule 92 (abstract_declarator)


state 240

   95 abstract_declarator: abstract_declarator '[' ']' .

    $default  reduce using rule 95 (abstract_declarator)


state 241

   98 abstract_declarator: abstract_declarator '[' '*' . ']'

    ']'  shift, and go to state 255


state 242

   96 abstract_declarator: abstract_declarator '[' assignment_expression . ']'

    ']'  shift, and go to state 256


state 243

  101 abstract_declarator: abstract_declarator '(' ')' .

    $default  reduce using rule 101 (abstract_declarator)


state 244

   86 parameter_list: parameter_list . ',' parameter_declaration
  102 abstract_declarator: abstract_declarator '(' parameter_list . ')'

    ','  shift, and go to state 166
    ')'  shift, and go to state 257


state 245

  109 initializer_list: initializer_list ',' designation initializer .

    $default  reduce using rule 109 (initializer_list)


state 246

   15 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 15 (argument_expression_list)


state 247

  131 selection_statement: IF '(' expression ')' statement .
  132                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 258

    $default  reduce using rule 131 (selection_statement)


state 248

  133 selection_statement: SWITCH '(' expression ')' statement .

    $default  reduce using rule 133 (selection_statement)


state 249

  134 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 134 (iteration_statement)


state 250

   66 expression: expression . ',' assignment_expression
  135 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ','  shift, and go to state 159
    ')'  shift, and go to state 259


state 251

  138 iteration_statement: FOR '(' declaration expression_statement ')' . statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 260
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 252

   66 expression: expression . ',' assignment_expression
  139 iteration_statement: FOR '(' declaration expression_statement expression . ')' statement

    ','  shift, and go to state 159
    ')'  shift, and go to state 261


state 253

  136 iteration_statement: FOR '(' expression_statement expression_statement ')' . statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 262
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 254

   66 expression: expression . ',' assignment_expression
  137 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ','  shift, and go to state 159
    ')'  shift, and go to state 263


state 255

   98 abstract_declarator: abstract_declarator '[' '*' ']' .

    $default  reduce using rule 98 (abstract_declarator)


state 256

   96 abstract_declarator: abstract_declarator '[' assignment_expression ']' .

    $default  reduce using rule 96 (abstract_declarator)


state 257

  102 abstract_declarator: abstract_declarator '(' parameter_list ')' .

    $default  reduce using rule 102 (abstract_declarator)


state 258

  132 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 264
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 259

  135 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 265


state 260

  138 iteration_statement: FOR '(' declaration expression_statement ')' statement .

    $default  reduce using rule 138 (iteration_statement)


state 261

  139 iteration_statement: FOR '(' declaration expression_statement expression ')' . statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 266
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 262

  136 iteration_statement: FOR '(' expression_statement expression_statement ')' statement .

    $default  reduce using rule 136 (iteration_statement)


state 263

  137 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER       shift, and go to state 65
    CONSTANT_INT     shift, and go to state 34
    CONSTANT_DOUBLE  shift, and go to state 35
    INC_OP           shift, and go to state 36
    DEC_OP           shift, and go to state 37
    CASE             shift, and go to state 66
    IF               shift, and go to state 67
    SWITCH           shift, and go to state 68
    WHILE            shift, and go to state 69
    DO               shift, and go to state 70
    FOR              shift, and go to state 71
    GOTO             shift, and go to state 72
    CONTINUE         shift, and go to state 73
    BREAK            shift, and go to state 74
    RETURN           shift, and go to state 75
    TRUE             shift, and go to state 38
    FALSE            shift, and go to state 39
    ';'              shift, and go to state 76
    '!'              shift, and go to state 40
    '~'              shift, and go to state 41
    '-'              shift, and go to state 42
    '+'              shift, and go to state 43
    '{'              shift, and go to state 24
    '('              shift, and go to state 45

    primary_expression         go to state 46
    postfix_expression         go to state 47
    unary_expression           go to state 48
    unary_operator             go to state 49
    multiplicative_expression  go to state 50
    additive_expression        go to state 51
    shift_expression           go to state 52
    relational_expression      go to state 53
    equality_expression        go to state 54
    and_expression             go to state 55
    exclusive_or_expression    go to state 56
    inclusive_or_expression    go to state 57
    logical_and_expression     go to state 58
    logical_or_expression      go to state 59
    assignment_expression      go to state 78
    expression                 go to state 79
    statement                  go to state 267
    labeled_statement          go to state 82
    compound_statement         go to state 83
    expression_statement       go to state 86
    selection_statement        go to state 87
    iteration_statement        go to state 88
    jump_statement             go to state 89


state 264

  132 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 132 (selection_statement)


state 265

  135 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 135 (iteration_statement)


state 266

  139 iteration_statement: FOR '(' declaration expression_statement expression ')' statement .

    $default  reduce using rule 139 (iteration_statement)


state 267

  137 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 137 (iteration_statement)
